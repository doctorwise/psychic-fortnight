$date
  Thu Sep 29 14:50:52 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module mux2_8 $end
$var reg 8 ! d0[7:0] $end
$var reg 8 " d1[7:0] $end
$var reg 1 # s $end
$var reg 8 $ y[7:0] $end
$scope module lsbmux $end
$var reg 4 % d0[3:0] $end
$var reg 4 & d1[3:0] $end
$var reg 1 ' s $end
$var reg 4 ( y[3:0] $end
$var reg 1 ) sbar $end
$scope module t0 $end
$var reg 4 * a[3:0] $end
$var reg 1 + en $end
$var reg 4 , y[3:0] $end
$upscope $end
$scope module t1 $end
$var reg 4 - a[3:0] $end
$var reg 1 . en $end
$var reg 4 / y[3:0] $end
$upscope $end
$upscope $end
$scope module msbmux $end
$var reg 4 0 d0[3:0] $end
$var reg 4 1 d1[3:0] $end
$var reg 1 2 s $end
$var reg 4 3 y[3:0] $end
$var reg 1 4 sbar $end
$scope module t0 $end
$var reg 4 5 a[3:0] $end
$var reg 1 6 en $end
$var reg 4 7 y[3:0] $end
$upscope $end
$scope module t1 $end
$var reg 4 8 a[3:0] $end
$var reg 1 9 en $end
$var reg 4 : y[3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000001 !
b00000010 "
0#
b00000001 $
b0001 %
b0010 &
0'
b0001 (
1)
b0001 *
1+
b0001 ,
b0010 -
0.
b0001 /
b0000 0
b0000 1
02
b0000 3
14
b0000 5
16
b0000 7
b0000 8
09
b0000 :
#2000000
1#
b00000010 $
1'
b0010 (
0)
0+
b0010 ,
1.
b0010 /
12
b0000 3
04
06
b0000 7
19
b0000 :
#4000000
